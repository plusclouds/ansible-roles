---
- name: Find required template from template engine
  uri:
    url: http://apiv2/v2/iaas/virtual-machines/templates?distro={{ preferred_template }}&version={{ preferred_version }}&datacenterNode={{ preferred_node }}
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200
    timeout: 300
  register: template

- name: Clone the template
  uri:
    url: http://apiv2/v2/iaas/virtual-machines/{{ template.json.data.0.id }}/clone
    body: "name={{ application }} Server&total_cpu=2&total_ram=1024"
    method: POST
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 201
    timeout: 300
  register: cloned_vm

- name: Wait until the template is cloned
  uri:
    url: http://apiv2/v2/iaas/virtual-machines/{{ cloned_vm.json.data.id }}/status
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200
    timeout: 300
  register: cloned_vm_status
  until: cloned_vm_status.json.data.status == "halted"
  retries: 30
  delay: 3

- name: Tag vm as application
  uri:
    url: http://apiv2/v2/iaas/virtual-machines/{{ cloned_vm.json.data.id }}/tags
    method: POST
    headers:
      Authorization: "Bearer {{ user_token }}"
    body: "name[]={{ application }}&name[]=nginx&name[]=mysql"
    return_content: yes
    status_code: 201
    timeout: 300

- name: Set Virtual Machine Name as Load Balancer of App
  uri:
    url: http://apiv2/v2/iaas/virtual-machines/{{ cloned_vm.json.data.id }}
    method: PUT
    headers:
      Authorization: "Bearer {{ user_token }}"
    body: "name=Web Server for {{ application }}"
    return_content: yes
    status_code: 204
    timeout: 300

- name: Set Virtual Interface 0 for cloned vm
  uri:
    url: http://apiv2/v2/iaas/virtual-machines/{{ cloned_vm.json.data.id }}/set-network-card
    method: PUT
    headers:
      Authorization: "Bearer {{ user_token }}"
    body: "name={{ application }}_vif_0&network_ref={{ preferred_network }}&device=0"
    return_content: yes
    status_code: 201
  register: cloned_vm_vif0

- name: Add new IP to VIF0
  uri:
    url: http://apiv2/v2/packetbender/ip
    method: POST
    headers:
      Authorization: "Bearer {{ user_token }}"
    body: "network_ref={{ preferred_network }}&virtual_network_card_ref={{ cloned_vm_vif0.json.data.id }}&allow=1"
    status_code: 201
  register: ip_address

- name: Find DHCP service in Datacenter Node
  uri:
    url: http://apiv2/v2/iaas/datacenter-nodes/{{ preferred_node }}?include=dhcpServer
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200
    timeout: 300
  register: datacenter_node_with_dhcp


- name: Add IP record to DHCP server
  uri:
    url: http://apiv2/v2/packetbender/dhcp/server/{{ datacenter_node_with_dhcp.json.data.dhcpServer.data.id }}/add-ip
    method: PUT
    headers:
      Authorization: "Bearer {{ user_token }}"
    body: "mac={{ cloned_vm_vif0.json.data.mac_addr }}&ip={{ ip_address.json.data.ip_addr }}"
    return_content: yes
    status_code: 204
    timeout: 300

- name: Boot the server
  uri:
    url: http://apiv2/v2/iaas/virtual-machines/{{ cloned_vm.json.data.id }}/start
    method: PUT
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 204
    timeout: 300

