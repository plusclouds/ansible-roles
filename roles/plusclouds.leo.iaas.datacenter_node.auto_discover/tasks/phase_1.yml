---
- name: Get Cloud Node Information
  uri:
    url: "{{leo_url}}/v2/iaas/datacenter-nodes?include=datacenter&slug={{ datacenter_node_slug }}"
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200
    timeout: 300
  register: datacenter_node

- set_fact:
    datacenter: "{{ datacenter_node.json.data.0.datacenter.data }}"

- set_fact:
    datacenter_node: "{{ datacenter_node.json.data.0 }}"

- name: Check if datacenter node has compute pool
  uri:
    url: "{{leo_url}}/v2/iaas/compute-pools?datacenterNode={{ datacenter_node.id }}&fields=username,password,master_ip_addr,management_url"
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200
    timeout: 300
  register: compute_pools
  ignore_errors: true

- name: Setting compute pool on phase 1
  set_fact:
    compute_pool: "{{ compute_pools.json.data.0 }}"

- name: Check if datacenter node has storage pool
  uri:
    url: "{{leo_url}}/v2/iaas/storage-pools?datacenterNode={{ datacenter_node.id }}"
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200, 404
    timeout: 300
  register: storage_pool
  ignore_errors: true

- name: Include create storage pool
  include_tasks: "create_default_storage_pool.yml"
  when: storage_pool.status == 404

- name: Setting storage pool on phase 1
  set_fact:
    storage_pool: "{{ storage_pool.json.data }}"

- name: Check if datacenter node has network pool
  uri:
    url: "{{leo_url}}/v2/iaas/network-pools?datacenterNode={{ datacenter_node.id }}"
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200, 404
    timeout: 300
  register: network_pool
  ignore_errors: true

#- name: Include create default network pool
#  include_tasks: "create_default_network_pool.yml"
#  when: network_pool.status == 404

#- name: Setting network pool on phase 1
#  set_fact:
#    network_pool: "{{ network_pool.json.data }}"