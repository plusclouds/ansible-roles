---
- name: Get Cloud Node Information
  uri:
    url: http://apiv2/v2/iaas/datacenter-nodes?include=datacenter&slug={{ datacenter_node_slug }}
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200
    timeout: 300
  register: datacenter_node

- name: Check if datacenter node has compute pool
  uri:
    url: http://apiv2/v2/iaas/compute-pools?datacenterNode={{ datacenter_node.json.data.0.id }}&fields=username,password,master_ip_addr,management_url
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200
    timeout: 300
  register: compute_pool
  ignore_errors: true

- name: Check if datacenter node has storage pool
  uri:
    url: http://apiv2/v2/iaas/storage-pools?datacenterNode={{ datacenter_node.json.data.0.id }}
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200, 404
    timeout: 300
  register: storage_pool
  ignore_errors: true

- name: Create default storage pool if Cloud Node does not have any
  uri:
    url: http://apiv2/v2/iaas/storage-pools
    method: POST
    headers:
      Authorization: "Bearer {{ user_token }}"
    body: "\
name={{ datacenter_node.json.data.0.name }} Storage&\
currency_code={{ compute_pool.json.data.0.currency_code }}&\
hourly_price={{ compute_pool.json.data.0.hdd_hourly_price }}&\
ip_addr={{ compute_pool.json.data.0.master_ip_addr }}&\
username={{ compute_pool.json.data.0.username }}&\
password={{ compute_pool.json.data.0.password }}&\
is_active=1&\
connection_type=local&\
datacenter_ref={{ datacenter_node.json.data.0.datacenter.data.id }}"
    return_content: yes
    status_code: 201
    timeout: 300
  register: storage_pool
  when: storage_pool.status == 404

- name: Check if datacenter node has network pool
  uri:
    url: http://apiv2/v2/iaas/network-pools?datacenterNode={{ datacenter_node.json.data.0.id }}
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200, 404
    timeout: 300
  register: network_pool
  ignore_errors: true

- name: Create defauls network pool if Cloud Node does not have any
  uri:
    url: http://apiv2/v2/iaas/network-pools
    method: POST
    headers:
      Authorization: "Bearer {{ user_token }}"
    body: "\
name={{ datacenter_node.json.data.0.name }} Network&\
management_type=api&\
ip_addr={{ compute_pool.json.data.0.master_ip_addr }}&\
management_url={{ compute_pool.json.data.0.management_url }}&\
port=443&\
username={{ compute_pool.json.data.0.username }}&\
password={{ compute_pool.json.data.0.password }}&\
is_active=1&\
datacenter_ref={{ datacenter_node.json.data.0.datacenter.data.id }}"
    return_content: yes
    status_code: 201
    timeout: 300
  register: network_pool
  when: network_pool.status == 404