---
- name: Update apt
  apt:
    update_cache: yes

- name: Get installed packaged
  shell: dpkg -l | grep mysql-server
  register: packages
  ignore_errors: yes

- set_fact:
    installed: 0

- name: Check if mysql is installed already
  set_fact:
    installed: 1
  when: packages.stdout is search("mysql-server")

- debug:
    msg: "MySQL Server is installed already"
  when: installed == 1

- name: Update Package and Install curl, python-mysqldb, python-pycurl, software-properties-common
  apt: pkg={{ item }} state=present update_cache=yes
  with_items:
    - curl
    - software-properties-common
    - python-pycurl
    - python-mysqldb
    - python-pymysql
    - perl-modules
  when: installed == 0

- name: Add an apt key by id from a keyserver
  apt_key:
    keyserver: keys.gnupg.net
    id: 8C718D3B5072E1F5
  when: installed == 0

- name: debian | set license as accepted
  debconf:
    name="mysql-apt-config"
    question="mysql-apt-config/select-product"
    value='Ok'
    vtype='select'
  when: installed == 0

- name: Install Config
  apt:
    deb: https://dev.mysql.com/get/mysql-apt-config_0.8.11-1_all.deb
  when: installed == 0

- name: Update apt
  apt:
    update_cache: yes
  when: installed == 0

- name: Install MySQL Server and Client
  apt: pkg={{ item }} state=present update_cache=yes force=yes
  with_items:
    - mysql-server
    - mysql-client
  when: installed == 0

- name: Create my.cnf
  template: src=my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=0600

- name: Update root password and plugin
  shell: mysql --user={{ mysql_root_user }} --password={{ mysql_root_password }} -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ mysql_root_password }}';"
  become: yes

- name: restart mysql
  service:
    name: mysql
    state: restarted
  become: yes
